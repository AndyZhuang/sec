f.fields_for :lessons, lesson do |l|
  l.input :level_id, as: :select, required: true, collection: topic.lessons.unused_levels if lesson.new_record?
  l.input :objective

  l.fields_for :duration, l.object.duration do |d|
    f.inputs "Duration", class: 'input duration' do
      d.input :hours, as: :number, label: 'Hours'
      d.input :minutes, as: :number, label: 'Minutes'
    end
  end

  f.inputs "Teaching Ratio", class: 'input ratio' do
    l.input :instructors, as: :number
    l.input :students, as: :number
  end

  l.input :body, as: :ckeditor

  l.has_many :lesson_prereqs,
             heading: false,
             allow_destroy: true,
             new_record: "Add a prerequisite" do |p|
    p.input :resource_type, as: :hidden,
            input_html: { value: "Lesson" }
    p.input :resource, as: :select,
            label: "Prerequisite", collection: Lesson.all
  end

  l.has_many :lesson_materials,
             heading: false,
             allow_destroy: true,
             new_record: "Add a training material" do |p|
    p.input :resource_type, as: :hidden,
            input_html: { value: "Material" }
    p.input :resource, as: :select,
            label: "Material", collection: Material.all
  end

  l.has_many :lesson_articles,
             heading: false,
             allow_destroy: true,
             new_record: "Add an article" do |p|
    p.input :resource_type, as: :hidden,
            input_html: { value: "Article" }
    p.input :resource, as: :select,
            label: "Article", collection: Article.all
  end

  l.input :tags,
          as: :select,
          multiple: true,
          collection: ActsAsTaggableOn::Tag.order(:name).select(:id, :name).all,
          input_html: { class: "select2" }

  l.input :_destroy, as: :boolean, label: 'Delete this level' if lesson.persisted?
end
